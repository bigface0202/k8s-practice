apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
  # deploymentが管理するpodを定義
  # labelsにapp=mysqlと設定されたpodを管理する
  selector:
    app: mysql
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  # podをアップデートするときの動作を定義
  # Recreateのときはpodは1つしか存在できず、更新すると古いものが消え新しいものが再度作成される
  strategy:
    type: Recreate
  template: # podの定義
    metadata:
      labels:
        app: mysql
    spec:
      imagePullSecrets:
        - name: artifact-registry
      containers:
        - image: asia-northeast1-docker.pkg.dev/sacred-lane-365413/kishi-reg/mysql:v1
          imagePullPolicy: IfNotPresent
          name: mysql
          env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom: 
              secretKeyRef:
                name: mysql-secret
                key: mysql-root-password
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: mysql-secret
                key: mysql-user
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secret
                key: mysql-password
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts: # コンテナ内のどのディレクトリにpersistentVolumeをマウントするか
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      nodeSelector: # Podを乗せるノードをラベルから指定できる
        kubernetes.io/hostname: work01
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
            # name=mysql-pv-claimを使ってマウントできるPersistent Volumeを探す
