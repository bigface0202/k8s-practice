apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      imagePullSecrets:
        - name: artifact-registry
      containers:
      # Flask
        - name: server
          image: asia-northeast1-docker.pkg.dev/sacred-lane-365413/kishi-reg/flask_myapp:v1
          imagePullPolicy: IfNotPresent
          command: [ "flask", "run", "--host", "0.0.0.0", "--port", "5000"]
          resources:
            limits:
              cpu: "100m"
              memory: "500Mi"
          env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom: 
              secretKeyRef:
                name: mysql-secret
                key: mysql-root-password
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: mysql-secret
                key: mysql-user
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secret
                key: mysql-password
          - name: BACKEND_HOST
            value: localhost:3306
          ports:
          - containerPort: 5000  
        # MySQL
        - name: mysql
          image: mysql:latest
          resources:
            limits:
              cpu: "400m"
              memory: "1Gi"
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom: 
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-password
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
      nodeSelector: # Podを乗せるノードをラベルから指定できる
        kubernetes.io/hostname: work01